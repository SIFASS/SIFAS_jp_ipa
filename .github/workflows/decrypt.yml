# vim: expandtab tabstop=2 shiftwidth=2
name: Decrypt Binary

env:
  appName: "allstars"
  PYTHONIOENCODING: utf-8

on: 
  release:
  workflow_dispatch:
    inputs:
      unk:
  repository_dispatch:

jobs:
  binary_decrypt:
    name: 'Decrypt Binary'
    runs-on: "ubuntu-20.04"
    steps:
      - name: Set up git repository
        uses: actions/checkout@v2

      - name: Get branch name
        run: |
          echo "LATEST_VERSION=$(cat curver.txt)" >> $GITHUB_ENV

      - id: download-ipa-000
        name: Download ipa 000
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ env.appName }}-${{ env.LATEST_VERSION }}
          file: ${{ env.appName }}.ipa.000
          target: ${{ env.appName }}.ipa.000
          token: ${{ secrets.GITHUB_TOKEN }}

      - id: download-ipa-001
        name: Download ipa 001
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ env.appName }}-${{ env.LATEST_VERSION }}
          file: ${{ env.appName }}.ipa.001
          target: ${{ env.appName }}.ipa.001
          token: ${{ secrets.GITHUB_TOKEN }}

      - id: download-sinf
        name: Download sinf
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ env.appName }}-${{ env.LATEST_VERSION }}
          file: ${{ env.appName }}.sinf
          target: ${{ env.appName }}.sinf
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge ipa
        run: |
          cat ${{ env.appName }}.ipa.* > ${{ env.appName }}.ipa
          rm ${{ env.appName }}.ipa.*

      - name: Decrypt binary
        env:
          DECRYPT_SERVER: ${{ secrets.DECRYPT_SERVER }}
          DECRYPT_SERVER_TOKEN: ${{ secrets.DECRYPT_SERVER_TOKEN }}
        run: |
          python3 workflow_helper/iTunesDownload/decrypt_binary.py ${{ runner.temp }}/${{ env.appName }}.ipa ${{ runner.temp }}/${{ env.appName }}.sinf

      # - name: Pushing to release
      #   if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
      #   uses: ncipollo/release-action@v1
      #   with:
      #     name: "${{ env.appName }}-${{ steps.curver.outputs.curver }}"
      #     commit: ${{ github.sha }}
      #     tag: "${{ env.appName }}-${{ steps.curver.outputs.curver }}"
      #     artifacts: ${{ runner.temp }}\ipaDown\${{ env.appName }}.ipa.*,${{ runner.temp }}\ipaDown\${{ env.appName }}.sinf
      #     token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Commit ver change
      #   if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
      #   run: |
      #     git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
      #     git config --local user.name "github-actions[bot]"
      #     git add curver.txt
      #     git commit -m "Updating app to ver ${{ steps.curver.outputs.curver }}" -a
      #   shell: bash
      # - name: Push changes
      #   if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     branch: ${{ github.ref }}