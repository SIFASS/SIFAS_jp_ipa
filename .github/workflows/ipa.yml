# vim: expandtab tabstop=2 shiftwidth=2
name: Download IPA

env:
  appUrl: "https://apps.apple.com/jp/app/id1377018522"
  appStore: "jp"
  appName: "allstars"
  PYTHONIOENCODING: utf-8
  GIT_SSH_COMMAND: 'ssh -i $HOME/.ssh/ssh.key'

on: 
  push:
  schedule:
    - cron: '30 * * * *'
  workflow_dispatch:
    inputs:
      unk:
  repository_dispatch:

jobs:
  ipa_update:
    name: 'Update IPA'
    runs-on: "windows-latest"
    steps:
      - name: Set up git repository
        uses: actions/checkout@v2
      - name: Pre check version
        id: check
        run: |
            pip3 install requests
            if python3 workflow_helper/iTunesDownload/precheck_version.py ${{ env.appStore }} ${{ env.appUrl }}; then
                echo "Version updated! Continue to download!"
                echo '::set-output name=NEED_UPDATE::1'
            else
                echo "Version unchanged! Relax~"
                echo '::set-output name=NEED_UPDATE::0'
            fi
        shell: bash
        
      - name: Setup iTunes
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        run: |
          echo ${{ steps.check.outputs.NEED_UPDATE }}
          workflow_helper\iTunesInstall\install_itunes.bat
        
      - name: Login iTunes
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        env:
          APPLEID: ${{ secrets.APPLEID }}
          APPLEID_PWD: ${{ secrets.APPLEID_PWD }}
        run: |
            pip3 install pywinauto
            python3 workflow_helper/itunes_auto_login.py %APPLEID% %APPLEID_PWD%
        shell: cmd
      
      - name: Download ipa
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        run: |
            pip3 install frida
            python3 workflow_helper\iTunesDownload\download_ipa.py ${{ env.appStore }} ${{ env.appUrl }} ${{ env.appName }}
            mkdir ${{ runner.temp }}\ipaDown
            move *.ipa ${{ runner.temp }}\ipaDown
            move *.sinf ${{ runner.temp }}\ipaDown
      #- uses: NyaMisty/reverse-rdp-windows-github-actions@master
      #  if: ${{ always() }}
      #  with:
      #    ngrok-token: ${{ secrets.NGROK_AUTH_TOKEN }}
      #    password: Aa123456
      #- name: "Upload package"
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: ${{ env.appName }}.ipa
      #    path: ${{ runner.temp }}\ipaDown\${{ env.appName }}.ipa
      - name: Split ipa
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        run: split --bytes=1879048192 --suffix-length=3 --numeric-suffix ${{ env.appName }}.ipa ${{ env.appName }}.ipa.
        working-directory: ${{ runner.temp }}\ipaDown
        shell: bash
      - name: Get current version
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        id: curver
        run: echo "::set-output name=curver::$(cat curver.txt)"
        shell: bash
      #- name: Create tag     
      #  uses: actions/github-script@v3
      #  with:
      #    github-token: ${{ github.token }}
      #    script: |
      #      github.git.createRef({
      #        owner: context.repo.owner,
      #        repo: context.repo.repo,
      #        ref: "refs/tags/${{ env.appName }}-${{ steps.curver.outputs.curver }}",
      #        sha: context.sha
      #      })
      #- name: Pushing to release
      #  uses: softprops/action-gh-release@v1
      #  with:
      #    files: ${{ runner.temp }}\ipaDown\${{ env.appName }}.ipa.*
      #    tag_name: "${{ env.appName }}-${{ steps.curver.outputs.curver }}"
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Pushing to release
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        uses: ncipollo/release-action@v1
        with:
          name: "${{ env.appName }}-${{ steps.curver.outputs.curver }}"
          commit: ${{ github.sha }}
          tag: "${{ env.appName }}-${{ steps.curver.outputs.curver }}"
          artifacts: ${{ runner.temp }}\ipaDown\${{ env.appName }}.ipa.*,${{ runner.temp }}\ipaDown\${{ env.appName }}.sinf
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit ver change
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add curver.txt
          git commit -m "Updating app to ver ${{ steps.curver.outputs.curver }}" -a
        shell: bash
      - name: Push changes
        if: ${{ steps.check.outputs.NEED_UPDATE == 1 }}
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  binary_decrypt:
    if: ${{ needs.ipa_update.steps.check.outputs.NEED_UPDATE == 1 }}
    name: 'Decrypt Binary'
    runs-on: "ubuntu-20.04"
    needs:
      - ipa_update
    steps:
      - name: Set up git repository
        uses: actions/checkout@v2

      - name: Get branch name
        run: |
          echo "LATEST_VERSION=$(cat curver.txt)" >> $GITHUB_ENV

      - id: download-ipa-000
        name: Download ipa 000
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ env.appName }}-${{ env.LATEST_VERSION }}
          file: ${{ env.appName }}.ipa.000
          target: ${{ env.appName }}.ipa.000
          token: ${{ secrets.GITHUB_TOKEN }}

      - id: download-ipa-001
        name: Download ipa 001
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ env.appName }}-${{ env.LATEST_VERSION }}
          file: ${{ env.appName }}.ipa.001
          target: ${{ env.appName }}.ipa.001
          token: ${{ secrets.GITHUB_TOKEN }}

      - id: download-sinf
        name: Download sinf
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ env.appName }}-${{ env.LATEST_VERSION }}
          file: ${{ env.appName }}.sinf
          target: ${{ env.appName }}.sinf
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge ipa
        run: |
          cat ${{ env.appName }}.ipa.* > ${{ runner.temp }}/${{ env.appName }}.ipa
          rm ${{ env.appName }}.ipa.*

      - name: Decrypt binary
        env:
          DECRYPT_SERVER: ${{ secrets.DECRYPT_SERVER }}
          DECRYPT_SERVER_TOKEN: ${{ secrets.DECRYPT_SERVER_TOKEN }}
        run: |
          python3 workflow_helper/iTunesDownload/decrypt_binary.py ${{ runner.temp }}/${{ env.appName }}.ipa ${{ env.appName }}.sinf

      - name: Setup SSH Key
        env:
          SSHK: ${{ secrets.SIFASS_KEY }}
        run: |
          mkdir -p $HOME/.ssh
          ssh-keyscan -H gitlab.com > $HOME/.ssh/known_hosts
          echo "$SSHK" > $HOME/.ssh/ssh.key
          chmod 600 $HOME/.ssh/ssh.key

      - name: Set up gitlab repository
        run: |
          git clone git@gitlab.com:SIFASS/SIFAS_jp_bin.git "$(pwd)/SIFAS_jp_bin"

      - name: Commit binary file
        run: |
          cd "$(pwd)/SIFAS_jp_bin"
          cp ../${{ env.appName }} .
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git lfs install
          git lfs track
          git add ${{ env.appName }}
          git commit -m "Decrypted binary for version ${{ env.LATEST_VERSION }}"
        shell: bash

      - name: Push changes
        run: |
          git push